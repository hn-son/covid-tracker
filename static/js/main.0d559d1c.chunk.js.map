{"version":3,"sources":["InfoBox.js","Map.js","Table.js","LineGraph.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","Table","countries","map","country","LineGraph","sortData","data","sort","a","b","App","useState","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","useEffect","fetch","then","res","json","name","value","iso2","sortedData","getCountriesData","onCountryChange","e","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d559d1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\n\r\nfunction InfoBox({title, cases, total}) {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n                <Typography className=\"infoBox_title\" color=\"textSecondary\">\r\n                    {title}\r\n                </Typography>\r\n                <h2 className=\"infoBox_cases\">{cases}</h2>\r\n                <Typography className=\"infoBox_total\"> \r\n                    {total} Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\n\r\nfunction Map() {\r\n    return (\r\n        <div className=\"map\"> \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport './Table.css';\r\n\r\nfunction Table({countries}) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({country, cases}) => (\r\n                <tr>\r\n                    <td>{country}</td>\r\n                    <td><strong>{cases}</strong></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n//https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n\r\nfunction LineGraph() {\r\n  const [data, setData] = useState({});\r\n\r\n  \r\n  const buildChartData = (data, casesType='cases') => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n\r\n    for(let date in data.cases) {\r\n      if(lastDataPoint){\r\n          const newDataPoint = {\r\n              x: date,\r\n              y: data[casesType][date] - lastDataPoint,\r\n          }\r\n          chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data['cases'][date];\r\n    };\r\n    return chartData;\r\n};\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const chartData = buildChartData(data);\r\n        setData(chartData);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Line data={{\r\n        datasets: [{\r\n          backgroundColor: \"rgba(204, 16, 52, 0)\",\r\n          borderColor: \"#ccc1034\",\r\n          data: data,\r\n        },],\r\n      }} options />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a, b) => (a.cases > b.cases) ? -1 : 1);\r\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport LineGraph from \"./LineGraph\";\nimport { sortData } from \"./util\";\n\n// https://corona.lmao.ninja/v3/covid-19/countries\n// https://disease.sh/v3/covid-19/all\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://corona.lmao.ninja/v3/covid-19/countries\")\n        .then((res) => res.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n        \n    };\n    getCountriesData();\n  }, []);\n\n\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://corona.lmao.ninja/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <InfoBox\n            title=\"Corona Virus Cases\"\n            cases={countryInfo.todayCases}\n            total={countryInfo.cases}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            cases={countryInfo.todayRecovered}\n            total={countryInfo.recovered}\n          />\n          <InfoBox\n            title=\"Deaths\"\n            cases={countryInfo.todayDeaths}\n            total={countryInfo.deaths}\n          />\n        </div>\n        <Map />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide New Cases</h3>\n          {/* <LineGraph/> */}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './Index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}